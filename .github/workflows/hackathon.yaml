name: Hackathon

on:
  workflow_dispatch:
    inputs:
      actionType:
        type: choice
        description: Action Type
        options: 
        - Hackathon Infrastructure - Plan
        - Hackathon Infrastructure - Apply
        - Hackathon Infrastructure - Destroy
        - Build and Deploy App


permissions:
      id-token: write
      contents: read

jobs:

  build_and_deploy:
    name: 'Build and Deploy App'
    if: github.event.inputs.actionType == 'Build and Deploy App'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: [self-hosted,Linux,X64,openid]
    environment: cs-hackathon

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ./az-serverless-backend-app/requirements.txt
        pip install -r ./az-serverless-frontend-app/requirements.txt

    - name: Login to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy backend to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'cs-hack-back-dev'
        slot-name: 'development'
        package: './az-serverless-backend-app'

    - name: Deploy frontend to App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'cs-hack-front-dev'
        slot-name: 'development'
        package: './az-serverless-frontend-app'
 
  
  terraformDestroy:
    name: 'Hackathon Infrastructure - Destroy'
    if: github.event.inputs.actionType == 'Hackathon Infrastructure - Destroy'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: [self-hosted,Linux,X64,openid]
    environment: cs-hackathon
    

    defaults:
      run:
        shell: bash
        working-directory: ./az-serverless-demo

    steps:
      - name: 'Code checkout'
        uses: actions/checkout@v2
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      
      - name: check current directory
        id: basic_cli_command
        run: |
          pwd
          ls

      - name: Terraform Init
        run: terraform init 
        
      - name: Terraform Validate
        run: terraform validate

      - name: Possible cost saving due this destroy
        run: infracost breakdown --path .
      
      - name: Terraform Destroy
        run: terraform destroy -var-file="./env/gt/env.tfvars" --auto-approve

  CreateResourceGroupPlan:
    name: 'Hackathon Infrastructure - Plan'
    if: github.event.inputs.actionType == 'Hackathon Infrastructure - Plan'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: [self-hosted,Linux,X64,openid]
    environment: cs-hackathon
    

    defaults:
      run:
        shell: bash
        working-directory: ./az-serverless-demo

    steps:
      - name: 'Code checkout'
        uses: actions/checkout@v2
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      
      - name: check current directory
        id: basic_cli_command
        run: |
          pwd
          ls

      - name: Terraform Init
        run: terraform init 
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=deploy.tfplan -var-file="./env/gt/env.tfvars"
      
      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: infracost breakdown --path=./ --format=json --out-file=/tmp/terraform_state/infracost-base.json
      # Generate an Infracost diff and save it to a JSON file.
      - name: Generate Infracost diff
        run: infracost diff --path=./ --format=json --compare-to=/tmp/terraform_state/infracost-base.json --out-file=/tmp/terraform_state/infracost.json

      - name: Post Infracost comment
        run: infracost breakdown --path .
  
  CreateResourceGroupApply:
    name: 'Hackathon Infrastructure - Apply'
    if: github.event.inputs.actionType == 'Hackathon Infrastructure - Apply'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
    runs-on: [self-hosted,Linux,X64,openid]
    environment: cs-hackathon

    defaults:
      run:
        shell: bash
        working-directory: ./az-serverless-demo

    steps:
      - name: 'Code checkout'
        uses: actions/checkout@v2
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      
      - name: check current directory
        id: basic_cli_command
        run: |
          pwd
          ls

      - name: Terraform Init
        run: terraform init 
        
      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=deploy.tfplan -var-file="./env/gt/env.tfvars"
      
      # Generate Infracost JSON file as the baseline.
      - name: Generate Infracost cost estimate baseline
        run: infracost breakdown --path=./ --format=json --out-file=/tmp/terraform_state/infracost-base.json
      # Generate an Infracost diff and save it to a JSON file.
      - name: Generate Infracost diff
        run: infracost diff --path=./ --format=json --compare-to=/tmp/terraform_state/infracost-base.json --out-file=/tmp/terraform_state/infracost.json

      - name: Post Infracost comment
        run: infracost breakdown --path .
        #infracost comment github --path=/tmp/terraform_state/infracost.json --repo=$GITHUB_REPOSITORY --github-token=${{github.token}} --behavior=update
        
      - name: Terraform Apply
        run: terraform apply --auto-approve "deploy.tfplan"
      
      
      